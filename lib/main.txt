import 'package:animated_icon/animated_icon.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'dart:async';
import 'package:google_fonts/google_fonts.dart';
import 'package:url_launcher/url_launcher_string.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MyApp());
  
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepOrange),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> with TickerProviderStateMixin {
  late AnimationController _logoAnimationController;
  late AnimationController _contentFadeController;
  late Animation<double> _logoSizeAnimation;
  late Animation<double> _logoFadeAnimation;
  late Animation<double> _contentFadeAnimation;
  final ScrollController _scrollController = ScrollController();

  @override
  void initState() {
    super.initState();

    _logoAnimationController = AnimationController(
      duration: const Duration(seconds: 3),
      vsync: this,
    );

    _contentFadeController = AnimationController(
      duration: const Duration(seconds: 2),
      vsync: this,
    );

    _logoSizeAnimation = Tween<double>(begin: 1.0, end: 0.5).animate(
      CurvedAnimation(
          parent: _logoAnimationController, curve: Curves.easeInOut),
    );

    _logoFadeAnimation = Tween<double>(begin: 1.0, end: 0.0).animate(
      CurvedAnimation(
          parent: _logoAnimationController, curve: Curves.easeInOut),
    );

    _contentFadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(
      CurvedAnimation(parent: _contentFadeController, curve: Curves.easeIn),
    );

    // Sequence of animations
    Timer(const Duration(seconds: 3), () {
      _logoAnimationController.forward();
    });

    Timer(const Duration(seconds: 6), () {
      _contentFadeController.forward();
    });
    _fetchDocumentIDs();
  }

  Future<void> _fetchDocumentIDs() async {
    print("DM Fetching");
    try {
      CollectionReference photosCollection =
          FirebaseFirestore.instance.collection('photos');
      
      QuerySnapshot querySnapshot = await photosCollection.get();
      List<String> documentIDs = querySnapshot.docs.map((doc) => doc.id).toList();

      // Print document IDs to the console (you can display them in the UI if needed)
      print('Document IDs: $documentIDs');
    } catch (e) {
      print('Error fetching document IDs: $e');
    }
  }

  @override
  void dispose() {
    _logoAnimationController.dispose();
    _contentFadeController.dispose();
    _scrollController.dispose();
    super.dispose();
  }

  void _scrollToCard() {
    _scrollController.animateTo(
      _scrollController.position.maxScrollExtent,
      duration: const Duration(seconds: 1),
      curve: Curves.easeOut,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFF59F42),
      body: DecoratedBox(
        decoration: BoxDecoration(
          image: DecorationImage(
            image: AssetImage("assets/noise.png"),
            fit: BoxFit.cover,
          ),
        ),
        child: SingleChildScrollView(
          controller: _scrollController,
          child: Column(
            children: [
              SizedBox(
                height: MediaQuery.of(context).size.height,
                child: Stack(
                  children: [
                    Center(
                      child: AnimatedBuilder(
                        animation: _logoAnimationController,
                        builder: (context, child) {
                          return Opacity(
                            opacity: _logoFadeAnimation.value,
                            child: Transform.scale(
                              scale: _logoSizeAnimation.value,
                              child: Image(
                                image: AssetImage("assets/logo.png"),
                                fit: BoxFit.contain,
                                width: 700,
                              ),
                            ),
                          );
                        },
                      ),
                    ),
                    Center(
                      child: FadeTransition(
                        opacity: _contentFadeAnimation,
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Image(
                              image: AssetImage("assets/logo2.png"),
                              fit: BoxFit.contain,
                              width: 100,
                            ),
                            SizedBox(height: 20),
                            Text(
                              'HI THERE!',
                              style: GoogleFonts.bagelFatOne(
                                fontSize: 120,
                                fontWeight: FontWeight.w700,
                                color: Colors.white,
                              ),
                              textAlign: TextAlign.center,
                            ),
                            SizedBox(height: 10),
                            Text(
                              'Nice to meet you',
                              style: GoogleFonts.leagueSpartan(
                                fontSize: 50,
                                fontWeight: FontWeight.w500,
                                color: Colors.white,
                              ),
                              textAlign: TextAlign.center,
                            ),
                            SizedBox(height: 20),
                            ElevatedButton(
                              onPressed: _scrollToCard,
                              style: ElevatedButton.styleFrom(
                                padding: EdgeInsets.zero,
                                shape: CircleBorder(),
                              ),
                              child: AnimateIcon(
                                key: UniqueKey(),
                                onTap: () {},
                                iconType: IconType.continueAnimation,
                                height: 70,
                                width: 70,
                                color: const Color(0xFFF59F42),
                                animateIcon: AnimateIcons.downArrow,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 150),
                child: Card(
                    elevation: 8,
                    child: Padding(
                      padding: EdgeInsets.all(20),
                      child: Padding(
                        padding: const EdgeInsets.all(40.0),
                        child: Expanded(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Text(
                                'About me',
                                style: GoogleFonts.leagueSpartan(
                                  fontSize: 50,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                              SizedBox(height: 8),
                              Text(
                                'I am Sebastián Martínez Santos, an outstanding student with experience in robotics, software development and audiovisual production. Feel free to contact me!',
                                style: GoogleFonts.leagueSpartan(
                                  fontSize:
                                      40, // Adjust font size based on card width
                                  letterSpacing: 0.5,
                                ),
                              ),
                              SizedBox(height: 16),
                              SingleChildScrollView(
                                scrollDirection: Axis.horizontal,
                                child: Row(
                                  children: [
                                    buildLargeStyledButton(
                                      icon: Icons.phone,
                                      onPressed: () => launchUrlString(
                                          'callto:+5492617148982'),
                                      title: "Contact me",
                                      subtitle: "Hit me up!",
                                    ),
                                    buildLargeStyledButton(
                                      icon: FontAwesomeIcons.briefcase,
                                      onPressed: () => launchUrlString(
                                          'callto:+5492617148982'),
                                      title: "Portfolio",
                                      subtitle: "Check my arts portfolio",
                                    ),
                                    buildStyledButton(
                                      icon: Icons.email,
                                      onPressed: () => launchUrlString(
                                          'mailto:contact@smartinezs.com'),
                                    ),
                                    buildStyledButton(
                                      icon: FontAwesomeIcons.whatsapp,
                                      onPressed: () => launchUrlString(
                                          'https://https://wa.link/3028h0'),
                                      isFaIcon: true,
                                    ),
                                    buildStyledButton(
                                      icon: FontAwesomeIcons.linkedin,
                                      onPressed: () => launchUrlString(
                                          'https://www.linkedin.com/in/smartinezs'),
                                      isFaIcon: true,
                                    ),
                                  ],
                                ),
                              )
                            ],
                          ),
                        ),
                      ),
                    )),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

Widget buildStyledButton(
    {required IconData icon,
    required VoidCallback onPressed,
    bool isFaIcon = false}) {
  return Container(
    margin: EdgeInsets.all(10),
    decoration: BoxDecoration(
      color: Colors.white,
      shape: BoxShape.rectangle,
      borderRadius: const BorderRadius.all(Radius.circular(20)),
      border: Border.all(
        color: Colors.black.withOpacity(0.15), // Subtle black line
        width: 1, // Adjust the width for the subtlety
      ),
      boxShadow: [
        BoxShadow(
          color: Colors.black.withOpacity(0.1),
          offset: Offset(4, 4),
          blurRadius: 8,
          spreadRadius: 1,
        ),
        BoxShadow(
          color: Colors.white,
          offset: Offset(-4, -4),
          blurRadius: 8,
          spreadRadius: 1,
        ),
      ],
    ),
    child: Padding(
      padding: const EdgeInsets.all(8.0),
      child: IconButton(
        icon: isFaIcon ? FaIcon(icon) : Icon(icon),
        iconSize: 30,
        onPressed: onPressed,
        color: Colors.black,
      ),
    ),
  );
}

Widget buildLargeStyledButton(
    {required IconData icon,
    required String title,
    required String subtitle,
    required VoidCallback onPressed,
    bool isFaIcon = false}) {
  return Container(
    margin: EdgeInsets.all(10),
    decoration: BoxDecoration(
      color: Colors.white,
      shape: BoxShape.rectangle,
      borderRadius: const BorderRadius.all(Radius.circular(20)),
      border: Border.all(
        color: Colors.black.withOpacity(0.15), // Subtle black line
        width: 1, // Adjust the width for the subtlety
      ),
      boxShadow: [
        BoxShadow(
          color: Colors.black.withOpacity(0.1),
          offset: Offset(4, 4),
          blurRadius: 8,
          spreadRadius: 1,
        ),
        BoxShadow(
          color: Colors.white,
          offset: Offset(-4, -4),
          blurRadius: 8,
          spreadRadius: 1,
        ),
      ],
    ),
    child: Padding(
      padding: const EdgeInsets.all(20),
      child: Column(
        children: [
          IconButton(
            icon: isFaIcon ? FaIcon(icon) : Icon(icon),
            iconSize: 40,
            onPressed: onPressed,
            color: Colors.black,
          ),
          Text(
            title,
            style: GoogleFonts.leagueSpartan(
              fontSize: 30,
              fontWeight: FontWeight.bold,
            ),
          ),
          Text(
            subtitle,
            style: GoogleFonts.leagueSpartan(
              fontSize: 15,
              fontWeight: FontWeight.normal,
            ),
          ),
        ],
      ),
    ),
  );
}
